openapi: 3.0.3
info:
  title: Team Dev Server API
  description: |-
  version: '1.0'

servers:
  - url: http://localhost:4000/
tags:
  - name: user
  - name: post
  - name: cohort
  - name: log
paths:
  /users:
    post:
      tags:
        - user
      summary: Create user
      description: Create new user
      operationId: createUser
      requestBody:
        description: User registration details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedUser'
    get:
      tags:
        - user
      summary: Get all users by name if provided
      description: ''
      operationId: getAllUsers
      security:
        - bearerAuth: []
      parameters:
        - name: name
          in: query
          description: Search all users by name if provided. Name is case insensitive and will return matches for both first name and last name.
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /teachers:
    get:
      tags:
        - teacher
      summary: Get all teachers
      description: ''
      operationId: getAllTeachers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllTeachers'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /teachers/:id:
    get:
      tags:
        - teacher
      summary: Get a teacher by id
      description: ''
      operationId: getTeacherById
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /teachers/me:
    get:
      tags:
        - teacher
      summary: Get a teacher by userId
      description: ''
      operationId: getTeacherByUserId
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /students:
    get:
      tags:
        - student
      summary: Get all students
      description: ''
      operationId: getAllStudents
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllStudents'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /students/me:
    get:
      tags:
        - student
      summary: Get a student by userId
      description: ''
      operationId: getStudentByUserId
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'    

  /login:
    post:
      tags:
        - user
      summary: Localhost Login
      description: ''
      operationId: loginUser
      requestBody:
        description: User login information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginRes'

        '400':
          description: Invalid username/password supplied
  
  /users/{id}:
    get:
      tags:
        - user
      summary: Get user by user id
      description: ''
      operationId: getUserByID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'

        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - user
      summary: Update a user
      description: Only users with a TEACHER role can update the cohortId or role. Users with Students role can only update their own details.
      operationId: userUpdate
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The user id that needs to be updated'
          required: true
          schema:
            type: string
      requestBody:
        description: The profile info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedUser'
        '401':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
    put:
      tags:
        - user
      summary: Update a user profile
      description: Allows a user to complete profile details after registering for the first time.
      operationId: userUpdate
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The user id of the profile'
          required: true
          schema:
            type: string
      requestBody:
        description: The profile info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedProfile'
        '404':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /posts:
    post:
      tags:
        - post
      summary: Create post
      description: This can only be done by the logged in user.
      operationId: createPost
      security:
        - bearerAuth: []
      requestBody:
        description: Created post object
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - post
      summary: Update post
      description: you can update your own post
      operationId: editPost
      security:
        - bearerAuth: []
      requestBody:
        description: Updated post object
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - post
      summary: Delete post
      description: you can delete your own post
      operationId: deletePost
      security:
        - bearerAuth: []
      requestBody:
        description: Updated post object
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '500':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - post
      summary: Get all posts
      description: get all posts
      operationId: getPosts
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'
        401:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /notes:
    post:
      tags:
        - note
      summary: Create note
      description: Can only be done by users with the teacher role
      operationId: postNote
      security:
        - bearerAuth: []
      requestBody:
        description: Created note object
        content:
          application/json:
            schema: 
              type: object
              properties:
                title:
                  type: string
                  example: Outstanding use of commas
                content:
                  type: string
                  example: This student's mastery over using commas is unlike anything I've ever seen. To the extent I never want to use a comma again.
                studentUserId:
                  type: integer
                  example: 1
                teacherUserId:
                  type: integer
                  example: 3      
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /logs:
    post:
      tags:
        - log
      summary: Create delivery log
      description: This can only be done by an authorised teacher user.
      operationId: createLog
      security:
        - bearerAuth: []
      requestBody:
        description: Created log object
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                cohortId:
                  type: integer
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '401':
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /cohorts:
    post:
      tags:
        - cohort
      summary: Create a cohort
      description: This can only be done by the logged in user with role TEACHER.
      operationId: createCohort
      security:
        - bearerAuth: []
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    properties:
                      cohort:
                        $ref: '#/components/schemas/Cohort'
        400:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - cohort
      summary: Get a list of all the /cohorts
      description: This can only be done is the logged in user has a role of TEACHER
      operationId: getCohorts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohorts'

  /comments:
    get:
      tags:
        - comments
      summary: Retrieve comments
      description: only registered users can view these
      operationId: getComments
      security:
        - bearerAuth: []
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
    post:
      tags:
        - comments
      summary: Create a new comment
      description: only registered users can do this
      operationId: postComment
      security:
        - bearerAuth: []
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /comments/{postId}:
    get:
      tags:
        - comments
      summary: Retrieve comments by post id
      description: only registered users can view these
      operationId: getCommentsByPostId
      security:
        - bearerAuth: []
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Post:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            post:
              properties:
                id:
                  type: integer
                content:
                  type: string

    Cohort:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          format: string
        departmentId:
          type: integer
        department:
          type: object
          properties:
            name:
              type: string
        createdAt:
          type: string
          format: string
        updatedAt:
          type: string
          format: string

    Cohorts:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          $ref: '#/components/schemas/Cohort'

    AllUsers:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/User'

    AllTeachers:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            teachers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    type: integer
                  departmentId:
                    type: integer
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
                  user:
                    type: object
                  department:
                    type: object               

    Teacher: 
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            id:
              type: integer
            userId:
              type: integer
            departmentId:
              type: integer
            createdAt:
              type: string
            updatedAt:
              type: string
            department:
              type: object

    AllStudents:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            students:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    type: integer
                  cohortId:
                    type: integer
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
                  user:
                    type: object
                  title:
                    type: object          
    
    Student: 
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            id:
              type: integer
            userId:
              type: integer
            cohortId:
              type: integer
            createdAt:
              type: string
            updatedAt:
              type: string
            user:
              type: object
            title:
              type: object      

    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        role:
          type: string
        cohortId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        githubUrl:
          type: string
        imageUrl:
          type: string

    CreateUser:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        bio:
          type: string
        githubUrl:
          type: string
        password:
          type: string
        imageUrl:
          type: string

    UpdateUser:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        cohortId:
          type: integer
        role:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        githubUrl:
          type: string
        imageUrl:
          type: string
          
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        githubUrl:
          type: string
        imageUrl:
          type: string
        bio:
          type: string
        role:
          type: string
        specialism:
          type: string
        cohort:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        email:
          type: string
        mobile:
          type: string
        password:
          type: string

    Posts:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            posts:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  content:
                    type: string
                    format: string
                  author:
                    type: object
                    properties:
                      id:
                        type: integer
                      cohortId:
                        type: integer
                      role:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      bio:
                        type: string
                      githubUrl:
                        type: string
                      profileImageUrl:
                        type: string
                  likes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        userId:
                          type: integer
                        postId:
                          type: integer
                  createdAt:
                    type: string
                    format: string
                  updatedAt:
                    type: string

    Comments:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            comments:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  content:
                    type: string
                  postId:
                    type: integer
                  userId:
                    type: integer
                  author:
                    type: object
                    properties:
                      firstName:
                        type: string
                      lastName:
                        type: string
                  createdAt:
                    type: string
                    format: string
                  updatedAt:
                    type: string
                    format: string

    Comment:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            comment:
              type: object
              properties:
                id:
                  type: integer
                content:
                  type: string
                postId:
                  type: integer
                userId:
                  type: integer
                author:
                  type: object
                  properties:
                    firstName:
                      type: string
                    lastName:
                      type: string
                createdAt:
                  type: string
                  format: string
                updatedAt:
                  type: string
                  format: string

    Note: 
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          type: object
          properties:
            note:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                title:
                  type: string
                  example: Outstanding use of commas
                content:
                  type: string
                  example: This student's mastery over using commas is unlike anything I've ever seen. To the extent I never want to use a comma again.
                student:
                  type: object
                  properties:
                    userId:
                      type: integer
                      example: 1
                    firstName:
                      type: string
                      example: Joe
                    lastName:
                      type: string
                      example: Bloggs
                teacher:
                  type: object
                  properties:
                    userId:
                      type: integer
                      example: 3
                    firstName:
                      type: string
                      example: Rick
                    lastName:
                      type: string
                      example: Sanchez

    CreatedUser:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          properties:
            user:
              properties:
                id:
                  type: integer
                email:
                  type: string
                cohortId:
                  type: integer
                role:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                bio:
                  type: string
                githubUrl:
                  type: string
    
    login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    loginRes:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            token:
              type: string
            user:
              properties:
                id:
                  type: integer
                email:
                  type: string
                cohortId:
                  type: integer
                role:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                bio:
                  type: string
                githubUrl:
                  type: string
    
    Error:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            error:
              type: string

    Log:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            log:
              properties:
                id:
                  type: integer
                cohortId:
                  type: integer
                date:
                  type: string
                author:
                  type: object
                  properties:
                    id:
                      type: integer
                    firstName:
                      type: string
                    lastName:
                      type: string
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      content:
                        type: string

    UpdatedProfile:
      type: object
      properties:
        status:
          type: string
          example: success
        data:
          properties:
            profile:
              properties:
                id:
                  type: integer
                userId:
                  type: integer
                firstName:
                  type: string
                lastName:
                  type: string
                githubUrl:
                  type: string
                imageUrl:
                  type: string
                bio:
                  type: string
                role:
                  type: string
                specialism:
                  type: string
                cohort:
                  type: string
                startDate:
                  type: string
                endDate:
                  type: string
                email:
                  type: string
                mobile:
                  type: string
                password:
                  type: string
